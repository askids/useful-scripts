<your_search_query>
| rex field=request_path mode=sed "s#/[0-9]{15}#/someid#g s#WX[0-9]{7}#anotherid#g"
| stats count by request_path

<your_search_query>
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/someid#g s#WX[0-9]{7}#anotherid#g"
| stats count by request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g s#WX[0-9]{7}#{anotherid}#g"
| rename request_path as parsed_request_path
| table original_request_path, parsed_request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs/.*?)([a-zA-Z0-9]{7})(/?)#\1{dogid}\3#g"
| table original_request_path, request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs/.*?)([AaXx][a-zA-Z0-9]{6})(/?)#\1{dogid}\3#gi"
| table original_request_path, request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs/.*?)([AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1{dogid}#g"
| table original_request_path, request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g"
| table original_request_path, request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g"
| table original_request_path, request_path

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 300 AND StatusCode < 400, "Redirect",
    StatusCode >= 400 AND StatusCode < 500, "Client Error",
    StatusCode >= 500 AND StatusCode < 600, "Server Error",
    true(), "Other"  // Default case for unexpected status codes
)
| stats count as total_count, min(log_time) as min_log_time, max(log_time) as max_log_time by request_path, Status

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; s#WX[0-9]{7}#{anotherid}#g; s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g; s#(.*/api/members/)([a-zA-Z0-9]{5})$#\1{newid}#g; s#(.*/api/members/)([a-zA-Z0-9]{5})/.*$#\1{newid}#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 300 AND StatusCode < 400, "Redirect",
    StatusCode >= 400 AND StatusCode < 500, "Client Error",
    StatusCode >= 500 AND StatusCode < 600, "Server Error",
    true(), "Other"  // Default case for unexpected status codes
)
| stats count as total_count, min(log_time) as min_log_time, max(log_time) as max_log_time by request_path, Status

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; 
                                     s#WX[0-9]{7}#{anotherid}#g; 
                                     s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; 
                                     s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})$#\1{newid}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})/.*$#\1{newid}/\2#g; 
                                     s#(/api/database/)([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})(/.*)?#\1{guid}\3#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 300 AND StatusCode < 400, "Redirect",
    StatusCode >= 400 AND StatusCode < 500, "Client Error",
    StatusCode >= 500 AND StatusCode < 600, "Server Error",
    true(), "Other"  // Default case for unexpected status codes
)
| stats count as total_count, min(log_time) as min_log_time, max(log_time) as max_log_time by request_path, Status

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; 
                                     s#WX[0-9]{7}#{anotherid}#g; 
                                     s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; 
                                     s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})$#\1{newid}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})/.*$#\1{newid}/\2#g; 
                                     s#(/api/database/)([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})(/.*)?#\1{guid}\3#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 300 AND StatusCode < 400, "Redirect",
    StatusCode >= 400 AND StatusCode < 500, "Client Error",
    StatusCode >= 500 AND StatusCode < 600, "Server Error",
    true(), "Other"
)
| eval response_time = <response_time_field>  // replace with the actual field for response time in your logs
| eval log_time = strptime(@t, "%Y-%m-%dT%H:%M:%S.%3N%z")  // Convert @t to epoch time
| stats count as total_count, 
        min(log_time) as min_log_time, 
        max(log_time) as max_log_time, 
        avg(response_time) as avg_response_time, 
        median(response_time) as median_response_time,
        count(eval(log_time >= relative_time(now(), "-24h"))) as count_last_24hrs  // Count for the last 24 hours
        by request_path, Status
| fieldformat min_log_time = strftime(min_log_time, "%Y-%m-%d %H:%M:%S %Z")
| fieldformat max_log_time = strftime(max_log_time, "%Y-%m-%d %H:%M:%S %Z")
| table request_path, Status, total_count, count_last_24hrs, min_log_time, max_log_time, avg_response_time, median_response_time

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; 
                                     s#WX[0-9]{7}#{anotherid}#g; 
                                     s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; 
                                     s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})$#\1{newid}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})/.*$#\1{newid}/\2#g; 
                                     s#(/api/database/)([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})(/.*)?#\1{guid}\3#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 300 AND StatusCode < 400, "Redirect",
    StatusCode >= 400 AND StatusCode < 500, "Client Error",
    StatusCode >= 500 AND StatusCode < 600, "Server Error",
    true(), "Other"
)
| eval response_time = <response_time_field>  // replace with the actual field for response time in your logs
| eval log_time = strptime(@t, "%Y-%m-%dT%H:%M:%S.%6N%Z")  // Updated strptime to match the full timestamp format with microseconds
| stats count as total_count, 
        min(log_time) as min_log_time, 
        max(log_time) as max_log_time, 
        avg(response_time) as avg_response_time, 
        median(response_time) as median_response_time,
        count(eval(log_time >= relative_time(now(), "-24h"))) as count_last_24hrs  // Count for the last 24 hours
        by request_path, Status
| fieldformat min_log_time = strftime(min_log_time, "%Y-%m-%d %H:%M:%S %Z")
| fieldformat max_log_time = strftime(max_log_time, "%Y-%m-%d %H:%M:%S %Z")
| table request_path, Status, total_count, count_last_24hrs, min_log_time, max_log_time, avg_response_time, median_response_time

<your_search_query>
| eval original_request_path = request_path
| rex field=request_path mode=sed "s#/[0-9]{10,19}#/{someid}#g; 
                                     s#WX[0-9]{7}#{anotherid}#g; 
                                     s#(/dogs.*?)([/][AaXx](?=[a-zA-Z0-9]{6})[a-zA-Z0-9]{6})#\1/{dogid}#g; 
                                     s#(/cats.*?)([a-zA-Z0-9_]+)@corp\.google\.com#\1/{catupn}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})$#\1{newid}#g; 
                                     s#(.*?/api/members/)([a-zA-Z0-9]{5})/.*$#\1{newid}/\2#g; 
                                     s#(/api/database/)([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})(/.*)?#\1{guid}\3#g"
| eval request_path = if(fieldx = "abc", "/api" . request_path, request_path)
| eval Status = case(
    StatusCode == 401, "Authentication Error",
    StatusCode == 403, "Authorization Error",
    StatusCode >= 200 AND StatusCode < 300, "Success",
    StatusCode >= 400 AND StatusCode < 600, "Client or Server Error",
    true(), "Other"
)
| eval response_time = <response_time_field>  // replace with the actual field for response time in your logs
| eval log_time = strptime('@t', "%Y-%m-%dT%H:%M:%S.%6N%Z")  // Ensure @t is enclosed in single quotes
| stats count as total_count, 
        min(log_time) as min_log_time, 
        max(log_time) as max_log_time, 
        round(avg(response_time), 2) as avg_response_time,  // Rounds average response time to 2 decimal places
        median(response_time) as median_response_time,
        count(eval(log_time >= relative_time(now(), "-24h"))) as count_last_24hrs,
        count(eval(Status == "Success")) as success_count,
        count(eval(Status == "Authorization Error")) as authorization_failure_count,
        count(eval(Status == "Authentication Error")) as authentication_failure_count,
        count(eval(Status == "Client or Server Error")) as client_server_error_count
        by request_path
| fieldformat min_log_time = strftime(min_log_time, "%Y-%m-%d %H:%M:%S %Z")
| fieldformat max_log_time = strftime(max_log_time, "%Y-%m-%d %H:%M:%S %Z")
| table request_path, total_count, count_last_24hrs, success_count, authorization_failure_count, authentication_failure_count, client_server_error_count, min_log_time, max_log_time, avg_response_time, median_response_time

<your_search_query>
| eval log_time = strptime('@t', "%Y-%m-%dT%H:%M:%S.%6N%Z")  // Convert @t to a timestamp if not already
| eval day_of_week = strftime(log_time, "%w")  // Get the day of the week (0=Sunday, 1=Monday, ..., 6=Saturday)
| eval is_holiday = if(match(strftime(log_time, "%Y-%m-%d"), "^(2024-11-28|2024-12-25|2025-01-01|...)$"), 1, 0) // Add your holiday dates here
| where day_of_week NOT IN ("0", "6") AND is_holiday = 0  // Exclude weekends and specific holidays
| stats count as total_count by request_path, log_time
| timechart span=1d avg(total_count) as avg_daily_count // Calculate daily average count only for weekdays
| rename avg_daily_count as avg_working_day_count
| table request_path, avg_working_day_count

<your_search_query>
| stats dc(userId) as unique_users_selected_time_range  // Count distinct users in the selected time range

| appendcols [
    search <your_search_query> earliest=-30d@d latest=@d  // Restrict to the past month
    | bin _time span=1d  // Group by day
    | stats dc(userId) as daily_unique_users by _time  // Count daily unique users
    | stats avg(daily_unique_users) as avg_daily_unique_users_last_month  // Calculate average daily unique users for the month
]

| table unique_users_selected_time_range, avg_daily_unique_users_last_month
