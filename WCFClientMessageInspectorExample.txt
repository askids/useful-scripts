using System;
using System.ServiceModel;
using System.ServiceModel.Description;
using System.ServiceModel.Dispatcher;

public class CustomMessageInspector : IClientMessageInspector
{
    private readonly bool useCookie;

    public CustomMessageInspector(bool useCookie)
    {
        this.useCookie = useCookie;
    }

    public object BeforeSendRequest(ref Message request, IClientChannel channel)
    {
        if (useCookie)
        {
            // Add logic to include Cookie header
        }
        else
        {
            // Add logic to include Authorization header
        }

        return null;
    }

    public void AfterReceiveReply(ref Message reply, object correlationState) { }
}

// Custom endpoint behavior to add the custom message inspector
public class CustomEndpointBehavior : IEndpointBehavior
{
    private readonly bool useCookie;

    public CustomEndpointBehavior(bool useCookie)
    {
        this.useCookie = useCookie;
    }

    public void AddBindingParameters(ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters) { }

    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)
    {
        clientRuntime.MessageInspectors.Add(new CustomMessageInspector(useCookie));
    }

    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher) { }

    public void Validate(ServiceEndpoint endpoint) { }
}

// Usage:
// Configure your WCF client to use the CustomEndpointBehavior
var client = new YourWcfClient();
client.Endpoint.Behaviors.Add(new CustomEndpointBehavior(true)); // Example: using Cookie header
